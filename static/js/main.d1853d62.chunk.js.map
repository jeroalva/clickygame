{"version":3,"sources":["components/FriendCard/index.js","components/Wrapper/index.js","components/NavbarElement/index.js","App.js","index.js"],"names":["FriendCard","props","className","onClick","clickFriend","src","image","width","id","data-name","name","alt","Wrapper","children","NavbarElement","style","points","highscore","App","state","allFriends","friends","clickedFriends","randomNums","shuffle","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","componentDidMount","i","push","newRanNumbers","this","setState","event","clickedId","target","includes","newRanNums","newClickedFriends","map","num","key","occupation","location","Component","ReactDOM","render","document","getElementById"],"mappings":"wtFAWeA,MARf,SAAoBC,GAClB,OACE,yBAAKC,UAAU,kBAAkBC,QAASF,EAAMG,aAC9C,yBAAKC,IAAKJ,EAAMK,MAAOC,MAAM,MAAMC,GAAIP,EAAMO,GAAIC,YAAWR,EAAMS,KAAMC,IAAKV,EAAMS,S,MCC1EE,MAJf,SAAiBX,GACf,OAAO,yBAAKC,UAAU,aAAaD,EAAMY,W,OCa1BC,MAdjB,SAAuBb,GACnB,OACI,yBAAKC,UAAU,OACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,6BAA6Ba,MAAO,CAACR,MAAM,SACtD,0BAAML,UAAU,wBAAhB,eACA,0BAAMA,UAAU,wBAAhB,WAAgDD,EAAMe,QACtD,0BAAMd,UAAU,wBAAhB,cAAmDD,EAAMgB,eCwE9DC,E,2MA1EbC,MAAQ,CACNC,WAAYC,EACZC,eAAgB,GAChBN,OAAQ,EACRC,UAAU,EACVM,WAAY,I,EAGdC,QAAU,SAAUC,GAGlB,IAFA,IAAiCC,EAAgBC,EAA7CC,EAAeH,EAAMI,OAElB,IAAMD,GAEXD,EAAcG,KAAKC,MAAMD,KAAKE,SAAWJ,GAGzCF,EAAiBD,EAFjBG,GAAgB,GAGhBH,EAAMG,GAAgBH,EAAME,GAC5BF,EAAME,GAAeD,EAEvB,OAAOD,G,EAGTQ,kBAAoB,WAElB,IADA,IAAIV,EAAa,GACTW,EAAE,EAAEA,EAAEb,EAAQQ,OAAOK,IAC3BX,EAAWY,KAAKD,GAElB,IAAIE,EAAgBC,KAAKb,QAAQD,GACjCc,KAAKC,SAAS,CAACf,WAAYa,K,EAG7BhC,YAAc,SAAAmC,GACZ,IAAMC,EAAYD,EAAME,OAAOjC,GAC/B,GAAG,EAAKW,MAAMG,eAAeoB,SAASF,GAAW,CAC5C,EAAKrB,MAAMH,OAAS,EAAKG,MAAMF,WAChC,EAAKqB,SAAS,CAACrB,UAAW,EAAKE,MAAMH,SAEvC,IAAI2B,EAAa,EAAKnB,QAAQ,EAAKL,MAAMI,YACzC,EAAKe,SAAS,CAACtB,OAAQ,EAAGM,eAAgB,GAAIC,WAAYoB,QAExD,CACF,IAAMC,EAAoB,EAAKzB,MAAMG,eACrCsB,EAAkBT,KAAKK,GACvBG,EAAa,EAAKnB,QAAQ,EAAKL,MAAMI,YACrC,EAAKe,SAAS,CAACf,WAAYoB,EAAYrB,eAAgBsB,EAAmB5B,OAAQ,EAAKG,MAAMH,OAAS,M,wEAKhG,IAAD,OACP,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAeA,OAAQqB,KAAKlB,MAAMH,OAAQC,UAAWoB,KAAKlB,MAAMF,YAChE,yBAAKf,UAAU,OACb,yBAAKA,UAAU,OACZmC,KAAKlB,MAAMI,WAAWsB,KAAI,SAAAC,GAAG,OAC5B,kBAAC,EAAD,CACEtC,GAAIa,EAAQyB,GAAKtC,GACjBuC,IAAK1B,EAAQyB,GAAKtC,GAClBE,KAAMW,EAAQyB,GAAKpC,KACnBJ,MAAOe,EAAQyB,GAAKxC,MACpB0C,WAAY3B,EAAQyB,GAAKE,WACzBC,SAAU5B,EAAQyB,GAAKG,SACvB7C,YAAe,EAAKA,wB,GAlElB8C,a,MCDlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.d1853d62.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction FriendCard(props) {\n  return (\n    <div className=\"btn btn-default\" onClick={props.clickFriend}>\n      <img src={props.image} width=\"150\" id={props.id} data-name={props.name} alt={props.name}/>\n    </div>\n  );\n}\n\nexport default FriendCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"container\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\r\n\r\n\r\nfunction NavbarElement(props) {\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col\">\r\n                <nav className=\"navbar navbar-dark bg-dark\" style={{width:100 + '%'}}>\r\n                    <span className=\"navbar-brand mb-0 h1\">Clicky Game</span>\r\n                    <span className=\"navbar-brand mb-0 h1\">Points: {props.points}</span>\r\n                    <span className=\"navbar-brand mb-0 h1\">Highscore: {props.highscore}</span>\r\n                </nav>\r\n            </div>\r\n        </div>\r\n    );\r\n  }\r\n  \r\n  export default NavbarElement;\r\n  ","import React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport friends from \"./friends.json\";\nimport NavbarElement from \"./components/NavbarElement\"\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    allFriends: friends,\n    clickedFriends: [],\n    points: 0,\n    highscore:0,\n    randomNums: []\n  };\n\n  shuffle = function (array) {\n    var currentIndex = array.length, temporaryValue, randomIndex; \n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n      // And swap it with the current element.\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n    return array;\n  }\n\n  componentDidMount = function(){\n    var randomNums = [];\n    for(let i=0;i<friends.length;i++){\n      randomNums.push(i)\n    }\n    var newRanNumbers = this.shuffle(randomNums);\n    this.setState({randomNums: newRanNumbers})\n  }\n\n  clickFriend = event => {\n    const clickedId = event.target.id\n    if(this.state.clickedFriends.includes(clickedId)){\n      if(this.state.points > this.state.highscore){\n        this.setState({highscore: this.state.points})\n      }\n      var newRanNums = this.shuffle(this.state.randomNums)\n      this.setState({points: 0, clickedFriends: [], randomNums: newRanNums})\n    }\n    else{\n      const newClickedFriends = this.state.clickedFriends\n      newClickedFriends.push(clickedId)\n      newRanNums = this.shuffle(this.state.randomNums)\n      this.setState({randomNums: newRanNums, clickedFriends: newClickedFriends, points: this.state.points + 1})\n    }\n  };\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (\n      <Wrapper>\n        <NavbarElement points={this.state.points} highscore={this.state.highscore}/>\n        <div className=\"row\">\n          <div className=\"col\">\n            {this.state.randomNums.map(num => (              \n              <FriendCard\n                id={friends[num].id}\n                key={friends[num].id}\n                name={friends[num].name}\n                image={friends[num].image}\n                occupation={friends[num].occupation}\n                location={friends[num].location}\n                clickFriend = {this.clickFriend}\n              />\n            ))}\n          </div>\n        </div>\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}